openapi: 3.0.1
info:
  title: My API
  version: '1.0'
  description: Learning api
  termsOfService: https://www.example.com/
  contact:
    email: mittalv3@gmail.com
    name: Vikas Mittal
    url: https://www.example.com/contacts
  license:
    name: My License
    url: https://www.example.com/license
servers:
  - url: http://localhost:3000
    variables: {}
    description: My local Fake Server
  - url: https://my-json-server.typicode.com/bearc0025/api/
    variables: {}
    description: My fake github server
paths:
  /users:
    summary: users path level operations
    description: returns users from server, create a user, update or delete it.
    get:
      summary: fetch users from server
      description: return users
      operationId: fetchUsers
      responses:
        default:
          description: Default error sample response
      tags:
        - users
    post:
      summary: Add a new user
      description: Stores user on server
      operationId: createUser
      requestBody:
        description: new user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: vikasm
                score:
                  type: integer
                  example: 1234
                active:
                  type: boolean
                  example: true
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
        default:
          description: Default error sample response
      tags:
        - users
  /attempts:
    summary: attempts path level operations
    description: returns attempts from server, create a attempt, update or delete it.
    get:
      summary: fetch attempts from server
      description: return attempts
      operationId: fetchAttempts
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
        default:
          description: Default error sample response
      tags:
        - attempts
components:
  schemas:
    FullUser:
      type: object
      properties:
        id:
          type: string
          example: 1234abcd
        username:
          type: string
          example: vikasm
        score:
          type: integer
          example: 1234
        active:
          type: boolean
          example: true
